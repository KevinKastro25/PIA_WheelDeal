// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIA_WheelDeal.Models.dbModels;

#nullable disable

namespace PIA_WheelDeal.Migrations
{
    [DbContext(typeof(BaseDeGatosContext))]
    partial class BaseDeGatosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.ImgVehiculo", b =>
                {
                    b.Property<int>("IdImg")
                        .HasColumnType("int")
                        .HasColumnName("id_img");

                    b.Property<int>("IdProd")
                        .HasColumnType("int")
                        .HasColumnName("id_prod");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("img");

                    b.HasKey("IdImg");

                    b.HasIndex("IdProd");

                    b.ToTable("ImgVehiculos");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.PeticionCompra", b =>
                {
                    b.Property<int>("IdPeticion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_peticion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeticion"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("id_empleado");

                    b.Property<int>("IdInd")
                        .HasColumnType("int")
                        .HasColumnName("id_ind");

                    b.Property<int>("IdProd")
                        .HasColumnType("int")
                        .HasColumnName("id_prod");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int")
                        .HasColumnName("id_status");

                    b.HasKey("IdPeticion");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdInd");

                    b.HasIndex("IdProd");

                    b.HasIndex("IdStatus");

                    b.ToTable("PeticionCompra");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.StatusCatalogo", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_status");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatus"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("IdStatus");

                    b.ToTable("StatusCatalogo");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.TiposCatalogo", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipo"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdTipo");

                    b.ToTable("TiposCatalogo");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.Vehiculo", b =>
                {
                    b.Property<int>("IdProd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_prod");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProd"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("Disponible")
                        .HasColumnType("bit")
                        .HasColumnName("disponible");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("matricula");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("precio");

                    b.HasKey("IdProd")
                        .HasName("PK_Producto");

                    b.HasIndex("IdTipo");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.Venta", b =>
                {
                    b.Property<int>("IdIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ingreso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngreso"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int>("IdInd")
                        .HasColumnType("int")
                        .HasColumnName("id_ind");

                    b.Property<int>("IdProd")
                        .HasColumnType("int")
                        .HasColumnName("id_prod");

                    b.Property<int>("Monto")
                        .HasColumnType("int")
                        .HasColumnName("monto");

                    b.HasKey("IdIngreso")
                        .HasName("PK_Finanzas");

                    b.HasIndex("IdInd");

                    b.HasIndex("IdProd");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PIA_WheelDeal.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PIA_WheelDeal.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIA_WheelDeal.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PIA_WheelDeal.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.ImgVehiculo", b =>
                {
                    b.HasOne("PIA_WheelDeal.Models.dbModels.Vehiculo", "IdProdNavigation")
                        .WithMany("ImgVehiculos")
                        .HasForeignKey("IdProd")
                        .IsRequired()
                        .HasConstraintName("FK_ImgVehiculos_Vehiculos");

                    b.Navigation("IdProdNavigation");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.PeticionCompra", b =>
                {
                    b.HasOne("PIA_WheelDeal.Models.dbModels.ApplicationUser", "IdEmpleadoNavigation")
                        .WithMany("PeticionCompraIdEmpleadoNavigations")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("FK_PeticionCompra_Individuos3");

                    b.HasOne("PIA_WheelDeal.Models.dbModels.ApplicationUser", "IdIndNavigation")
                        .WithMany("PeticionCompraIdIndNavigations")
                        .HasForeignKey("IdInd")
                        .IsRequired()
                        .HasConstraintName("FK_PeticionCompra_Individuos2");

                    b.HasOne("PIA_WheelDeal.Models.dbModels.Vehiculo", "IdProdNavigation")
                        .WithMany("PeticionCompras")
                        .HasForeignKey("IdProd")
                        .IsRequired()
                        .HasConstraintName("FK_PeticionCompra_Producto");

                    b.HasOne("PIA_WheelDeal.Models.dbModels.StatusCatalogo", "IdStatusNavigation")
                        .WithMany("PeticionCompras")
                        .HasForeignKey("IdStatus")
                        .IsRequired()
                        .HasConstraintName("FK_PeticionCompra_StatusCatalogo");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdIndNavigation");

                    b.Navigation("IdProdNavigation");

                    b.Navigation("IdStatusNavigation");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.Vehiculo", b =>
                {
                    b.HasOne("PIA_WheelDeal.Models.dbModels.TiposCatalogo", "IdTipoNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK_Vehiculos_TiposCatalogo");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.Venta", b =>
                {
                    b.HasOne("PIA_WheelDeal.Models.dbModels.ApplicationUser", "IdIndNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdInd")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_Individuos1");

                    b.HasOne("PIA_WheelDeal.Models.dbModels.Vehiculo", "IdProdNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdProd")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_Vehiculos");

                    b.Navigation("IdIndNavigation");

                    b.Navigation("IdProdNavigation");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("PeticionCompraIdEmpleadoNavigations");

                    b.Navigation("PeticionCompraIdIndNavigations");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.StatusCatalogo", b =>
                {
                    b.Navigation("PeticionCompras");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.TiposCatalogo", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("PIA_WheelDeal.Models.dbModels.Vehiculo", b =>
                {
                    b.Navigation("ImgVehiculos");

                    b.Navigation("PeticionCompras");

                    b.Navigation("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
